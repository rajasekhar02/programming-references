[00:00:00]
>> [MUSIC]

[00:00:03]
>> Kyle Simpson: If we look at exercise ten, simply all that I'm saying with exercise ten is, I gave you the code from one of the implementations is actually the.
>> Kyle Simpson: I gave you the code from the, which implementation? The asynquence flavored implementation from the repo. So I've given you that code already, it's set up in this repo and what this is asking you to do is first, to study the similarities and differences between these five implementations.

[00:00:38]
Shouldn't take you that much time to open up because there's only two files that you should care about the ui.js and the feeds.js, each of those implementations. So open up ui.js in those two, and look side by side look at some of the differences. Study those differences just not deeply, but just to get a rough sense of how things are going.

[00:00:56]
And then look at the ui and feeds js that's presented in this repo that is in the exercise 10 folder. Which is the asynchronous flavored one. Now your task for the exercise, should you choose to tackle it. Pick either one of reactive sequences or CSP, whichever one you like more from what we just talked about.

[00:01:15]
I don't care. Pick either one of those two and try to turn the asequence flavored one that I've provided you into that abstraction. So try to take it and make it into the observable reactive sequences one or try to make it into the CSP one, whichever one you'd like.

[00:01:31]
This is super challenging. I'll tell you that each of those implementations, when I wrote them the first time, took me days and days. So I'm not expecting you to get all the way there to a full complete thing, but you also can cheat cuz I've provided you the fixed versions on the repo, so if you need some hints.

[00:01:48]
But really the point here is to just spend the next few minutes, we'll probably break for 15 minutes or so. Take the next 15 minutes and try to study these differences, try your hand at making some changes to it that would be more reactive. And get a sense of what it's like to do what we've practiced all along in this workshop, but doing so in the context of a much more sophisticated app than our simple little promises demo.

